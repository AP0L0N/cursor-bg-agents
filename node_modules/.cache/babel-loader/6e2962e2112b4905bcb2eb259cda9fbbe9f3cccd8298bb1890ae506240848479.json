{"ast":null,"code":"import React,{useState}from'react';import Login from'./components/Login';import Registration from'./components/Registration';import ForgotPassword from'./components/ForgotPassword';import PasswordReset from'./components/PasswordReset';import Dashboard from'./components/Dashboard';import'./styles/main.scss';import{jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[currentView,setCurrentView]=useState('login');const handleLogin=userData=>{setUser(userData);setIsAuthenticated(true);setCurrentView('login');// Reset view after login\n};const handleRegister=userData=>{// For demo purposes, automatically log the user in after registration\nsetUser(userData);setIsAuthenticated(true);setCurrentView('login');// Reset view after registration\n};const handleLogout=()=>{setUser(null);setIsAuthenticated(false);setCurrentView('login');};const showLogin=()=>setCurrentView('login');const showRegistration=()=>setCurrentView('registration');const showForgotPassword=()=>setCurrentView('forgotPassword');const showPasswordReset=()=>setCurrentView('passwordReset');const renderAuthView=()=>{switch(currentView){case'registration':return/*#__PURE__*/_jsx(Registration,{onRegister:handleRegister,onShowLogin:showLogin});case'forgotPassword':return/*#__PURE__*/_jsx(ForgotPassword,{onShowLogin:showLogin,onShowPasswordReset:showPasswordReset});case'passwordReset':return/*#__PURE__*/_jsx(PasswordReset,{onPasswordReset:handleLogin,onShowLogin:showLogin});default:return/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,onShowForgotPassword:showForgotPassword,onShowRegistration:showRegistration});}};return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:isAuthenticated&&user?/*#__PURE__*/_jsx(Dashboard,{user:user,onLogout:handleLogout}):renderAuthView()});};export default App;","map":{"version":3,"names":["React","useState","Login","Registration","ForgotPassword","PasswordReset","Dashboard","jsx","_jsx","App","isAuthenticated","setIsAuthenticated","user","setUser","currentView","setCurrentView","handleLogin","userData","handleRegister","handleLogout","showLogin","showRegistration","showForgotPassword","showPasswordReset","renderAuthView","onRegister","onShowLogin","onShowPasswordReset","onPasswordReset","onLogin","onShowForgotPassword","onShowRegistration","className","children","onLogout"],"sources":["/workspace/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { User, AuthView } from './types';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport ForgotPassword from './components/ForgotPassword';\nimport PasswordReset from './components/PasswordReset';\nimport Dashboard from './components/Dashboard';\nimport './styles/main.scss';\n\nconst App: React.FC = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [currentView, setCurrentView] = useState<AuthView>('login');\n\n  const handleLogin = (userData: User): void => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    setCurrentView('login'); // Reset view after login\n  };\n\n  const handleRegister = (userData: User): void => {\n    // For demo purposes, automatically log the user in after registration\n    setUser(userData);\n    setIsAuthenticated(true);\n    setCurrentView('login'); // Reset view after registration\n  };\n\n  const handleLogout = (): void => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setCurrentView('login');\n  };\n\n  const showLogin = (): void => setCurrentView('login');\n  const showRegistration = (): void => setCurrentView('registration');\n  const showForgotPassword = (): void => setCurrentView('forgotPassword');\n  const showPasswordReset = (): void => setCurrentView('passwordReset');\n\n  const renderAuthView = (): JSX.Element => {\n    switch (currentView) {\n      case 'registration':\n        return (\n          <Registration\n            onRegister={handleRegister}\n            onShowLogin={showLogin}\n          />\n        );\n      case 'forgotPassword':\n        return (\n          <ForgotPassword\n            onShowLogin={showLogin}\n            onShowPasswordReset={showPasswordReset}\n          />\n        );\n      case 'passwordReset':\n        return (\n          <PasswordReset\n            onPasswordReset={handleLogin}\n            onShowLogin={showLogin}\n          />\n        );\n      default:\n        return (\n          <Login\n            onLogin={handleLogin}\n            onShowForgotPassword={showForgotPassword}\n            onShowRegistration={showRegistration}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {isAuthenticated && user ? (\n        <Dashboard user={user} onLogout={handleLogout} />\n      ) : (\n        renderAuthView()\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5B,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAU,KAAK,CAAC,CACtE,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAW,OAAO,CAAC,CAEjE,KAAM,CAAAe,WAAW,CAAIC,QAAc,EAAW,CAC5CJ,OAAO,CAACI,QAAQ,CAAC,CACjBN,kBAAkB,CAAC,IAAI,CAAC,CACxBI,cAAc,CAAC,OAAO,CAAC,CAAE;AAC3B,CAAC,CAED,KAAM,CAAAG,cAAc,CAAID,QAAc,EAAW,CAC/C;AACAJ,OAAO,CAACI,QAAQ,CAAC,CACjBN,kBAAkB,CAAC,IAAI,CAAC,CACxBI,cAAc,CAAC,OAAO,CAAC,CAAE;AAC3B,CAAC,CAED,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAY,CAC/BN,OAAO,CAAC,IAAI,CAAC,CACbF,kBAAkB,CAAC,KAAK,CAAC,CACzBI,cAAc,CAAC,OAAO,CAAC,CACzB,CAAC,CAED,KAAM,CAAAK,SAAS,CAAGA,CAAA,GAAYL,cAAc,CAAC,OAAO,CAAC,CACrD,KAAM,CAAAM,gBAAgB,CAAGA,CAAA,GAAYN,cAAc,CAAC,cAAc,CAAC,CACnE,KAAM,CAAAO,kBAAkB,CAAGA,CAAA,GAAYP,cAAc,CAAC,gBAAgB,CAAC,CACvE,KAAM,CAAAQ,iBAAiB,CAAGA,CAAA,GAAYR,cAAc,CAAC,eAAe,CAAC,CAErE,KAAM,CAAAS,cAAc,CAAGA,CAAA,GAAmB,CACxC,OAAQV,WAAW,EACjB,IAAK,cAAc,CACjB,mBACEN,IAAA,CAACL,YAAY,EACXsB,UAAU,CAAEP,cAAe,CAC3BQ,WAAW,CAAEN,SAAU,CACxB,CAAC,CAEN,IAAK,gBAAgB,CACnB,mBACEZ,IAAA,CAACJ,cAAc,EACbsB,WAAW,CAAEN,SAAU,CACvBO,mBAAmB,CAAEJ,iBAAkB,CACxC,CAAC,CAEN,IAAK,eAAe,CAClB,mBACEf,IAAA,CAACH,aAAa,EACZuB,eAAe,CAAEZ,WAAY,CAC7BU,WAAW,CAAEN,SAAU,CACxB,CAAC,CAEN,QACE,mBACEZ,IAAA,CAACN,KAAK,EACJ2B,OAAO,CAAEb,WAAY,CACrBc,oBAAoB,CAAER,kBAAmB,CACzCS,kBAAkB,CAAEV,gBAAiB,CACtC,CAAC,CAER,CACF,CAAC,CAED,mBACEb,IAAA,QAAKwB,SAAS,CAAC,KAAK,CAAAC,QAAA,CACjBvB,eAAe,EAAIE,IAAI,cACtBJ,IAAA,CAACF,SAAS,EAACM,IAAI,CAAEA,IAAK,CAACsB,QAAQ,CAAEf,YAAa,CAAE,CAAC,CAEjDK,cAAc,CAAC,CAChB,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}