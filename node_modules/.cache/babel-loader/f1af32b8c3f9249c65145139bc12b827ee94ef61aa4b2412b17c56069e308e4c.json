{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/PasswordReset/PasswordReset.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './PasswordReset.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = ({\n  onPasswordReset,\n  onShowLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    token: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    // Validation\n    if (!formData.token || !formData.password || !formData.confirmPassword) {\n      setError('Please fill in all fields');\n      setIsLoading(false);\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      setIsLoading(false);\n      return;\n    }\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      setIsLoading(false);\n      return;\n    }\n\n    // Simulate password reset (replace with real API call)\n    setTimeout(() => {\n      // For demo purposes, always succeed\n      onPasswordReset({\n        username: 'admin',\n        name: 'Admin User',\n        email: 'admin@example.com'\n      });\n      setIsLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: \"Enter the reset token and your new password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"token\",\n          className: styles.label,\n          children: \"Reset Token:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"token\",\n          name: \"token\",\n          value: formData.token,\n          onChange: handleChange,\n          placeholder: \"Enter reset token\",\n          disabled: isLoading,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: styles.label,\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Enter new password (min 6 characters)\",\n          disabled: isLoading,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          className: styles.label,\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          placeholder: \"Confirm your new password\",\n          disabled: isLoading,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: styles.submitButton,\n        children: isLoading ? 'Resetting...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.authLinks,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.linkButton,\n          onClick: onShowLogin,\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"d4owsSbGdwRp6ZYkeJpeItpjOVg=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","PasswordReset","onPasswordReset","onShowLogin","_s","formData","setFormData","token","password","confirmPassword","error","setError","isLoading","setIsLoading","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","length","setTimeout","username","email","className","container","children","form","onSubmit","title","fileName","_jsxFileName","lineNumber","columnNumber","description","errorMessage","formGroup","htmlFor","label","type","id","onChange","placeholder","disabled","input","submitButton","authLinks","linkButton","onClick","_c","$RefreshReg$"],"sources":["/workspace/src/components/PasswordReset/PasswordReset.tsx"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from 'react';\nimport { PasswordResetProps, PasswordResetFormData } from '../../types';\nimport styles from './PasswordReset.module.scss';\n\nconst PasswordReset: React.FC<PasswordResetProps> = ({ \n  onPasswordReset, \n  onShowLogin \n}) => {\n  const [formData, setFormData] = useState<PasswordResetFormData>({\n    token: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    // Validation\n    if (!formData.token || !formData.password || !formData.confirmPassword) {\n      setError('Please fill in all fields');\n      setIsLoading(false);\n      return;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      setIsLoading(false);\n      return;\n    }\n\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      setIsLoading(false);\n      return;\n    }\n\n    // Simulate password reset (replace with real API call)\n    setTimeout(() => {\n      // For demo purposes, always succeed\n      onPasswordReset({\n        username: 'admin',\n        name: 'Admin User',\n        email: 'admin@example.com'\n      });\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <h2 className={styles.title}>Reset Password</h2>\n        <p className={styles.description}>\n          Enter the reset token and your new password.\n        </p>\n        \n        {error && <div className={styles.errorMessage}>{error}</div>}\n        \n        <div className={styles.formGroup}>\n          <label htmlFor=\"token\" className={styles.label}>\n            Reset Token:\n          </label>\n          <input\n            type=\"text\"\n            id=\"token\"\n            name=\"token\"\n            value={formData.token}\n            onChange={handleChange}\n            placeholder=\"Enter reset token\"\n            disabled={isLoading}\n            className={styles.input}\n          />\n        </div>\n\n        <div className={styles.formGroup}>\n          <label htmlFor=\"password\" className={styles.label}>\n            New Password:\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            placeholder=\"Enter new password (min 6 characters)\"\n            disabled={isLoading}\n            className={styles.input}\n          />\n        </div>\n\n        <div className={styles.formGroup}>\n          <label htmlFor=\"confirmPassword\" className={styles.label}>\n            Confirm Password:\n          </label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            placeholder=\"Confirm your new password\"\n            disabled={isLoading}\n            className={styles.input}\n          />\n        </div>\n\n        <button \n          type=\"submit\" \n          disabled={isLoading} \n          className={styles.submitButton}\n        >\n          {isLoading ? 'Resetting...' : 'Reset Password'}\n        </button>\n\n        <div className={styles.authLinks}>\n          <button \n            type=\"button\" \n            className={styles.linkButton} \n            onClick={onShowLogin}\n          >\n            Back to Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}