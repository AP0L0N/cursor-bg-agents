{"ast":null,"code":"import _objectSpread from\"/workspace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import styles from'./ForgotPassword.module.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPassword=_ref=>{let{onShowLogin,onShowPasswordReset}=_ref;const[formData,setFormData]=useState({email:''});const[error,setError]=useState('');const[success,setSuccess]=useState('');const[isLoading,setIsLoading]=useState(false);const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));setError('');setSuccess('');};const handleSubmit=async e=>{e.preventDefault();setIsLoading(true);setError('');setSuccess('');// Validation\nif(!formData.email){setError('Please enter your email address');setIsLoading(false);return;}// Email validation\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(formData.email)){setError('Please enter a valid email address');setIsLoading(false);return;}// Simulate password reset request (replace with real API call)\nsetTimeout(()=>{setSuccess('Password reset link has been sent to your email address');setIsLoading(false);// Automatically redirect to password reset form after 2 seconds\nsetTimeout(()=>{onShowPasswordReset();},2000);},1000);};return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"form\",{className:styles.form,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.title,children:\"Forgot Password\"}),/*#__PURE__*/_jsx(\"p\",{className:styles.description,children:\"Enter your email address and we'll send you a link to reset your password.\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:styles.errorMessage,children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:styles.successMessage,children:success}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:styles.label,children:\"Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Enter your email address\",disabled:isLoading,className:styles.input})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,className:styles.submitButton,children:isLoading?'Sending...':'Send Reset Link'}),/*#__PURE__*/_jsx(\"div\",{className:styles.authLinks,children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:styles.linkButton,onClick:onShowLogin,children:\"Back to Login\"})})]})});};export default ForgotPassword;","map":{"version":3,"names":["React","useState","styles","jsx","_jsx","jsxs","_jsxs","ForgotPassword","_ref","onShowLogin","onShowPasswordReset","formData","setFormData","email","error","setError","success","setSuccess","isLoading","setIsLoading","handleChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","emailRegex","test","setTimeout","className","container","children","form","onSubmit","title","description","errorMessage","successMessage","formGroup","htmlFor","label","type","id","onChange","placeholder","disabled","input","submitButton","authLinks","linkButton","onClick"],"sources":["/workspace/src/components/ForgotPassword/ForgotPassword.tsx"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from 'react';\nimport { ForgotPasswordProps, ForgotPasswordFormData } from '../../types';\nimport styles from './ForgotPassword.module.scss';\n\nconst ForgotPassword: React.FC<ForgotPasswordProps> = ({ \n  onShowLogin, \n  onShowPasswordReset \n}) => {\n  const [formData, setFormData] = useState<ForgotPasswordFormData>({\n    email: ''\n  });\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n    setSuccess('');\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Validation\n    if (!formData.email) {\n      setError('Please enter your email address');\n      setIsLoading(false);\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      setError('Please enter a valid email address');\n      setIsLoading(false);\n      return;\n    }\n\n    // Simulate password reset request (replace with real API call)\n    setTimeout(() => {\n      setSuccess('Password reset link has been sent to your email address');\n      setIsLoading(false);\n      \n      // Automatically redirect to password reset form after 2 seconds\n      setTimeout(() => {\n        onShowPasswordReset();\n      }, 2000);\n    }, 1000);\n  };\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <h2 className={styles.title}>Forgot Password</h2>\n        <p className={styles.description}>\n          Enter your email address and we'll send you a link to reset your password.\n        </p>\n        \n        {error && <div className={styles.errorMessage}>{error}</div>}\n        {success && <div className={styles.successMessage}>{success}</div>}\n        \n        <div className={styles.formGroup}>\n          <label htmlFor=\"email\" className={styles.label}>\n            Email Address:\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            placeholder=\"Enter your email address\"\n            disabled={isLoading}\n            className={styles.input}\n          />\n        </div>\n\n        <button \n          type=\"submit\" \n          disabled={isLoading} \n          className={styles.submitButton}\n        >\n          {isLoading ? 'Sending...' : 'Send Reset Link'}\n        </button>\n\n        <div className={styles.authLinks}>\n          <button \n            type=\"button\" \n            className={styles.linkButton} \n            onClick={onShowLogin}\n          >\n            Back to Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}