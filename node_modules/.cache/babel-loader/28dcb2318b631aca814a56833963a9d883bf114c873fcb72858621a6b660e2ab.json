{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/ForgotPassword/ForgotPassword.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './ForgotPassword.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = ({\n  onShowLogin,\n  onShowPasswordReset\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n    setSuccess('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Validation\n    if (!formData.email) {\n      setError('Please enter your email address');\n      setIsLoading(false);\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      setError('Please enter a valid email address');\n      setIsLoading(false);\n      return;\n    }\n\n    // Simulate password reset request (replace with real API call)\n    setTimeout(() => {\n      setSuccess('Password reset link has been sent to your email address');\n      setIsLoading(false);\n\n      // Automatically redirect to password reset form after 2 seconds\n      setTimeout(() => {\n        onShowPasswordReset();\n      }, 2000);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: \"Enter your email address and we'll send you a link to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.successMessage,\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: styles.label,\n          children: \"Email Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Enter your email address\",\n          disabled: isLoading,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: styles.submitButton,\n        children: isLoading ? 'Sending...' : 'Send Reset Link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.authLinks,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.linkButton,\n          onClick: onShowLogin,\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"OuiCgS2p+/GRBietbDLSPwl4T6A=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","ForgotPassword","onShowLogin","onShowPasswordReset","_s","formData","setFormData","email","error","setError","success","setSuccess","isLoading","setIsLoading","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","emailRegex","test","setTimeout","className","container","children","form","onSubmit","title","fileName","_jsxFileName","lineNumber","columnNumber","description","errorMessage","successMessage","formGroup","htmlFor","label","type","id","onChange","placeholder","disabled","input","submitButton","authLinks","linkButton","onClick","_c","$RefreshReg$"],"sources":["/workspace/src/components/ForgotPassword/ForgotPassword.tsx"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from 'react';\nimport { ForgotPasswordProps, ForgotPasswordFormData } from '../../types';\nimport styles from './ForgotPassword.module.scss';\n\nconst ForgotPassword: React.FC<ForgotPasswordProps> = ({ \n  onShowLogin, \n  onShowPasswordReset \n}) => {\n  const [formData, setFormData] = useState<ForgotPasswordFormData>({\n    email: ''\n  });\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n    setSuccess('');\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Validation\n    if (!formData.email) {\n      setError('Please enter your email address');\n      setIsLoading(false);\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      setError('Please enter a valid email address');\n      setIsLoading(false);\n      return;\n    }\n\n    // Simulate password reset request (replace with real API call)\n    setTimeout(() => {\n      setSuccess('Password reset link has been sent to your email address');\n      setIsLoading(false);\n      \n      // Automatically redirect to password reset form after 2 seconds\n      setTimeout(() => {\n        onShowPasswordReset();\n      }, 2000);\n    }, 1000);\n  };\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <h2 className={styles.title}>Forgot Password</h2>\n        <p className={styles.description}>\n          Enter your email address and we'll send you a link to reset your password.\n        </p>\n        \n        {error && <div className={styles.errorMessage}>{error}</div>}\n        {success && <div className={styles.successMessage}>{success}</div>}\n        \n        <div className={styles.formGroup}>\n          <label htmlFor=\"email\" className={styles.label}>\n            Email Address:\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            placeholder=\"Enter your email address\"\n            disabled={isLoading}\n            className={styles.input}\n          />\n        </div>\n\n        <button \n          type=\"submit\" \n          disabled={isLoading} \n          className={styles.submitButton}\n        >\n          {isLoading ? 'Sending...' : 'Send Reset Link'}\n        </button>\n\n        <div className={styles.authLinks}>\n          <button \n            type=\"button\" \n            className={styles.linkButton} \n            onClick={onShowLogin}\n          >\n            Back to Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}