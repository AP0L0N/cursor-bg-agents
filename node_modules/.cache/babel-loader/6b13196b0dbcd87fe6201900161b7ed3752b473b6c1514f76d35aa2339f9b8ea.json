{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport ForgotPassword from './components/ForgotPassword';\nimport PasswordReset from './components/PasswordReset';\nimport Dashboard from './components/Dashboard';\nimport './styles/main.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [currentView, setCurrentView] = useState('login');\n  const handleLogin = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    setCurrentView('login'); // Reset view after login\n  };\n  const handleRegister = userData => {\n    // For demo purposes, automatically log the user in after registration\n    setUser(userData);\n    setIsAuthenticated(true);\n    setCurrentView('login'); // Reset view after registration\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setCurrentView('login');\n  };\n  const showLogin = () => setCurrentView('login');\n  const showRegistration = () => setCurrentView('registration');\n  const showForgotPassword = () => setCurrentView('forgotPassword');\n  const showPasswordReset = () => setCurrentView('passwordReset');\n  const renderAuthView = () => {\n    switch (currentView) {\n      case 'registration':\n        return /*#__PURE__*/_jsxDEV(Registration, {\n          onRegister: handleRegister,\n          onShowLogin: showLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this);\n      case 'forgotPassword':\n        return /*#__PURE__*/_jsxDEV(ForgotPassword, {\n          onShowLogin: showLogin,\n          onShowPasswordReset: showPasswordReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this);\n      case 'passwordReset':\n        return /*#__PURE__*/_jsxDEV(PasswordReset, {\n          onPasswordReset: handleLogin,\n          onShowLogin: showLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin,\n          onShowForgotPassword: showForgotPassword,\n          onShowRegistration: showRegistration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: isAuthenticated && user ? /*#__PURE__*/_jsxDEV(Dashboard, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : renderAuthView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FrJ8xHARJ8beMeniHgeTxI8sEdw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Registration","ForgotPassword","PasswordReset","Dashboard","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","user","setUser","currentView","setCurrentView","handleLogin","userData","handleRegister","handleLogout","showLogin","showRegistration","showForgotPassword","showPasswordReset","renderAuthView","onRegister","onShowLogin","fileName","_jsxFileName","lineNumber","columnNumber","onShowPasswordReset","onPasswordReset","onLogin","onShowForgotPassword","onShowRegistration","className","children","onLogout","_c","$RefreshReg$"],"sources":["/workspace/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { User, AuthView } from './types';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport ForgotPassword from './components/ForgotPassword';\nimport PasswordReset from './components/PasswordReset';\nimport Dashboard from './components/Dashboard';\nimport './styles/main.scss';\n\nconst App: React.FC = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [currentView, setCurrentView] = useState<AuthView>('login');\n\n  const handleLogin = (userData: User): void => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    setCurrentView('login'); // Reset view after login\n  };\n\n  const handleRegister = (userData: User): void => {\n    // For demo purposes, automatically log the user in after registration\n    setUser(userData);\n    setIsAuthenticated(true);\n    setCurrentView('login'); // Reset view after registration\n  };\n\n  const handleLogout = (): void => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setCurrentView('login');\n  };\n\n  const showLogin = (): void => setCurrentView('login');\n  const showRegistration = (): void => setCurrentView('registration');\n  const showForgotPassword = (): void => setCurrentView('forgotPassword');\n  const showPasswordReset = (): void => setCurrentView('passwordReset');\n\n  const renderAuthView = (): JSX.Element => {\n    switch (currentView) {\n      case 'registration':\n        return (\n          <Registration\n            onRegister={handleRegister}\n            onShowLogin={showLogin}\n          />\n        );\n      case 'forgotPassword':\n        return (\n          <ForgotPassword\n            onShowLogin={showLogin}\n            onShowPasswordReset={showPasswordReset}\n          />\n        );\n      case 'passwordReset':\n        return (\n          <PasswordReset\n            onPasswordReset={handleLogin}\n            onShowLogin={showLogin}\n          />\n        );\n      default:\n        return (\n          <Login\n            onLogin={handleLogin}\n            onShowForgotPassword={showForgotPassword}\n            onShowRegistration={showRegistration}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {isAuthenticated && user ? (\n        <Dashboard user={user} onLogout={handleLogout} />\n      ) : (\n        renderAuthView()\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}